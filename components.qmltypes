import QtQuick.tooling 1.1

Module {
    Component {
        name: "ApplicationInfo"
        prototype: "QObject"
        exports: ["com.iktwo.components/ApplicationInfo 1.0"]
        isCreatable: false
        isSingleton: true
        Property { name: "timesLaunched"; type: "int"; isReadonly: true }
        Property { name: "firstTimeLaunched"; type: "QDate"; isReadonly: true }
        Property { name: "hasShownInitialDialog"; type: "bool"; isReadonly: true }
    }
    Component {
        name: "ConnectivityManager"
        prototype: "QObject"
        exports: ["com.iktwo.components/ConnectivityManager 1.0"]
        Property { name: "connectionType"; type: "string"; isReadonly: true }
        Method { name: "retrieveConnectionType"; type: "string" }
    }
    Component {
        name: "DownloadManager"
        prototype: "QObject"
        exports: ["com.iktwo.components/DownloadManager 1.0"]
        Method {
            name: "download"
            Parameter { name: "url"; type: "string" }
            Parameter { name: "name"; type: "string" }
        }
    }
    Component {
        name: "PackageManager"
        prototype: "QObject"
        exports: ["com.iktwo.components/PackageManager 1.0"]
        Method {
            name: "packageHasPermission"
            type: "bool"
            Parameter { name: "package"; type: "string" }
            Parameter { name: "permission"; type: "string" }
        }
        Method {
            name: "hasPermission"
            type: "bool"
            Parameter { name: "permission"; type: "string" }
        }
    }
    Component {
        name: "ScreenValues"
        prototype: "QObject"
        exports: ["com.iktwo.components/ScreenValues 1.0"]
        isCreatable: false
        isSingleton: true
        Property { name: "dpi"; type: "int" }
        Property { name: "dp"; type: "float" }
        Property { name: "isTablet"; type: "bool"; isReadonly: true }
    }
    Component {
        name: "UpdateChecker"
        prototype: "QObject"
        exports: ["com.iktwo.components/UpdateChecker 1.0"]
        Property { name: "packageName"; type: "string"; isReadonly: true }
        Property { name: "version"; type: "string"; isReadonly: true }
        Property { name: "latestVersion"; type: "string"; isReadonly: true }
        Signal { name: "errorDownloading" }
        Method { name: "checkForUpdateOnGooglePlay" }
        Method { name: "openPackageOnGooglePlay" }
    }
    Component {
        prototype: "QObject"
        name: "Theme"
        exports: ["com.iktwo.components/Theme 1.0"]
        isComposite: true
        isCreatable: false
        isSingleton: true
        Property { name: "titleBarColor"; type: "QColor" }
        Property { name: "titleBarTextColor"; type: "QColor" }
        Property { name: "backgroundColor"; type: "QColor" }
        Property { name: "mainTextColor"; type: "QColor" }
        Method {
            name: "getContrastColor"
            type: "QVariant"
            Parameter { name: "color"; type: "QVariant" }
        }
        Method {
            name: "getBestIconSize"
            type: "QVariant"
            Parameter { name: "height"; type: "QVariant" }
        }
        Method {
            name: "nextNumericState"
            type: "QVariant"
            Parameter { name: "object"; type: "QVariant" }
        }
    }
}
